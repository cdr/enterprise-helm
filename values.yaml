# coderd -- Primary service responsible for all things Coder!
coderd:
  # coderd.image -- Injected by Coder during release.
  image: ""
  # coderd.replicas -- The number of Kubernetes Pod replicas.
  replicas: 1
  # coderd.replica -- Deploy a replica to geodistribute access to
  # workspaces for lower latency.
  replica:
    # coderd.replica.enable -- Run coderd as a replica pointing to a primary deployment.
    enable: false
    # coderd.replica.primaryURL -- URL of the primary deployment.
    primaryURL: ""
  # coderd.securityContext -- Fields related to the container's security
  # context (as opposed to the pod).
  securityContext:
    # coderd.securityContext.readonlyRootFilesystem -- Sets the root filesystem
    # of the container to read-only. It is recommended to leave this setting enabled
    # in production.
    readOnlyRootFilesystem: true
  # coderd.resources -- Kubernetes resource specification for coderd pods.
  # To unset a value, set it to "". To unset all values, set resources to nil.
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "250m"
      memory: "512Mi"
  # coderd.serviceType -- Coder uses a Service to expose coderd. See the following
  # for configurable types: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  serviceType: "ClusterIP"

# envbox -- Required for running Docker inside containers. See requirements:
# https://coder.com/docs/coder/v1.19/admin/workspace-management/cvms
envbox:
  # envbox.image -- Injected by Coder during release.
  image: ""

# ingress -- Configure access to your deployment.
ingress:
  # ingress.enable -- A Service with type LoadBalancer will be deployed
  # if true. Custom ingress configurations are welcomed for complex
  # installations. See the requirements here:
  # <insert docs here>
  enable: true
  # ingress.loadBalancerIP -- Set the external IP address of the LoadBalancer.
  loadBalancerIP: ""
  # ingress.loadBalancerSourceRanges -- If specified and supported by the
  # platform, the traffic through the cloud-provider load-balancer will be
  # restricted to the specified client IPs. This field will be ignored if the
  # cloud-provider does not support the feature.
  loadBalancerSourceRanges: []
  # ingress.tls -- TLS options for the ingress. The hosts used for the tls
  # configuration come from the ingress.host and the devurls.host variables. If
  # those don't exist, then the TLS configuration will be ignored.
  tls:
    # ingress.tls.enable -- Enables the tls configuration.
    enable: false
    # ingress.tls.hostSecretName -- The secret to use for the ingress.host
    # hostname.
    hostSecretName: ""
    # ingress.tls.devurlsHostSecretName -- The secret to use for the
    # devurls.host hostname.
    devurlsHostSecretName: ""

# Contains fields related to the Postgres backend. If providing your own
# instance, a minimum version of Postgres 11 is required with the contrib
# package installed.
postgres:
  # postgres.host -- Host of the external PostgreSQL instance.
  host: ""
  # postgres.port -- Port of the external PostgreSQL instance.
  port: ""
  # postgres.user -- User of the external PostgreSQL instance.
  user: ""
  # postgres.database -- Name of the database that Coder will use.
  # You must create this database first.
  database: ""
  # postgres.passwordSecret -- Name of an existing secret in the
  # current namespace with the password of the PostgreSQL instance.
  # The password must be contained in the secret field `password`.
  # This should be set to an empty string if the database does not
  # require a password to connect.
  passwordSecret: ""
  # postgres.sslMode -- Provides variable levels of protection for
  # the PostgreSQL connection. For acceptable values, see:
  #  https://www.postgresql.org/docs/9.1/libpq-ssl.html
  sslMode: "require"

  # postgres.default -- Configure a built-in PostgreSQL deployment.
  default:
    # postgres.default.enable -- Deploys a PostgreSQL instance. We recommend
    # using an external PostgreSQL instance in production.
    # If true, all other values are ignored.
    enable: true
    # postgres.default.image -- Injected by Coder during release.
    image: ""
    # postgres.default.resources -- Kubernetes resource specification for the PostgreSQL pod.
    # To unset a value, set it to "". To unset all values, set resources to nil.
    resources:
      requests:
        cpu: "250m"
        memory: "1Gi"
        # postgres.default.resources.requests.storage -- Specifies the size of the volume claim
        # for persisting the database.
        storage: "10Gi"
      limits:
        cpu: "250m"
        memory: "1Gi"

# services -- Kubernetes Service configuration that applies to Coder services. 
services:
  # services.annotations -- A KV mapping of annotations. See:
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  annotations: {}
  # services.tolerations -- Each element is a toleration object. See:
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # services.nodeSelector -- See:
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
  nodeSelector:
    kubernetes.io/os: linux
    kubernetes.io/arch: amd64

# logging -- Configures the logging format and output of Coder.
logging:
  # logging.human -- Location to send logs that are formatted for readability.
  # Set to an empty string to disable.
  human: /dev/stderr
  # logging.stackdriver -- Location to send logs that are formatted for Google
  # Stackdriver. Set to an empty string to disable.
  stackdriver: ""
  # logging.json -- Location to send logs that are formatted as JSON.
  # Set to an empty string to disable.
  json: ""

  # logging.splunk -- Coder can send logs directly to Splunk
  # in addition to file-based output.
  splunk:
    # logging.splunk.url -- Splunk HEC collector endpoint.
    url: ""
    # logging.splunk.token -- Splunk HEC collector token.
    token: ""
    # logging.splunk_channel -- Optional. Specify the channel
    # to associate messages with.
    channel: ""
