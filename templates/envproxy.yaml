---
apiVersion: v1
kind: Secret
metadata:
  name: built-in-envproxy-token
  namespace: {{ .Release.Namespace | quote }}
type: Opaque
# Adapted from https://stackoverflow.com/a/64325744
data:
  {{- if (lookup "v1" "Secret" .Release.Namespace "built-in-envproxy-token") }}
  token: {{ (lookup "v1" "Secret" .Release.Namespace "built-in-envproxy-token").data.token }}
  {{- else }}
  token: {{ randAlphaNum 32 | b64enc }}
  {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    coder.deployment: envproxy
  name: envproxy
  namespace: {{ .Release.Namespace | quote }}
  annotations:
  {{- range $key, $value := .Values.deploymentAnnotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.envproxy.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
  selector:
    matchLabels:
      coder.deployment: envproxy
  template:
    metadata:
      labels:
        coder.deployment: envproxy
      annotations:
      {{- range $key, $value := .Values.deploymentAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
    spec:
      # coder:coder
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      restartPolicy: Always
      # 4 hours
      terminationGracePeriodSeconds: {{ .Values.envproxy.terminationGracePeriodSeconds }}
      # envproxy itself doesn't use this service account, but instead forwards
      # the account token to the cemanager.
      serviceAccountName: coder
{{- include "coder.services.nodeSelector" . | indent 6 }}
{{- include "coder.serviceTolerations" . | indent 6 }}
      containers:
        - name: envproxy
          image: {{ .Values.envproxy.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - name: tcp-envproxy
              containerPort: 8080
{{- if eq .Values.ssh.enable true }}
            - name: ssh-envproxy
              containerPort: 2222
{{- end}}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          # envproxy is a daemon service, no need to allocate a tty for it.
          tty: false
          env:
            - name: HUMAN_LOG
              value: {{ .Values.logging.human | quote }}
            - name: JSON_LOG
              value: {{ .Values.logging.json | quote }}
            - name: STACKDRIVER_LOG
              value: {{ .Values.logging.stackdriver | quote }}
            - name: VERBOSE
              value: "true"
            - name: SPLUNK_URL
              value: {{ .Values.logging.splunk.url | quote }}
            - name: SPLUNK_TOKEN
              value: {{ .Values.logging.splunk.token | quote }}
            - name: SPLUNK_CHANNEL
              value: {{ .Values.logging.splunk.channel | quote }}
            - name: CLUSTER_ADDRESS
              value: {{ include "coder.cluster.accessURL" . | quote }}
            - name: CLUSTER_DOMAIN_SUFFIX
              value: {{ .Values.clusterDomainSuffix | quote }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ENVPROXY_ACCESS_URL
              value: {{ include "coder.envproxy.accessURL" . | quote }}
            - name: SSH_ENABLED
              value: {{ .Values.ssh.enable | quote }}
            - name: CEMANAGER_ACCESS_URL
              value: {{ include "coder.cemanager.accessURL" . | quote }}
            - name: CEMANAGER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: built-in-envproxy-token
                  key: token
            - name: STORAGE_CLASS
              value: {{ .Values.storageClassName | quote }}
            - name: DEVURL_HOST
              value: {{ .Values.devurls.host | quote }}
            - name: ENVIRONMENT_SA_NAME
              value: "environments"
          command:
            - /entrypoint.sh
            - envproxy
            - run
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            failureThreshold: 7
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            failureThreshold: 7
            periodSeconds: 10
{{- include "coder.resources" .Values.envproxy.resources | indent 10 }}
{{- include "coder.volumeMounts" . | indent 10 }}
{{- include "coder.volumes" . | indent 6 }}

---
apiVersion: v1
kind: Service
metadata:
  name: envproxy
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: {{ .Values.serviceType | quote }}
  selector:
    coder.deployment: envproxy
  ports:
    - name: tcp-envproxy
      port: 8080
      protocol: TCP
{{- if eq .Values.ssh.enable true}}
    - name: tcp-ssh
      port: 2222
      protocol: TCP
{{- end }}
